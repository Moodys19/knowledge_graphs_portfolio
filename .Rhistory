distinct() %>%  # Ensure we work with unique combinations
group_by(league_nationality_name, league_name) %>%
summarise(num_ids = n_distinct(league_id), .groups = "drop") %>%
filter(num_ids > 1)
check_duplicates_teams <- teams_clean %>%
select(league_nationality_name, league_name, league_id) %>%
distinct() %>%  # Ensure we work with unique combinations
group_by(league_nationality_name, league_name) %>%
summarise(num_ids = n_distinct(league_id), .groups = "drop") %>%
filter(num_ids > 1)
# ids and league levels will be mapped and fixed
# manually map league_level and create new league_id
league_names <- players_clean %>%
select(league_name, league_nationality_name) %>%
distinct()
write.csv2(league_names, "dataset/league_names.csv")
league_names_edited <- read.csv2("dataset/league_names_edited.csv")
players_clean <- players_clean %>%
select(-league_id, -league_level) %>%
left_join(league_names_edited, by = c("league_name"="league_name", "league_nationality_name" = "league_nationality_name")) %>%
select(colnames(.)[1:18], league_id, league_level, everything())
#league_check[is.na(league_check$league_id), ]
#unique(teams_df$nationality_name)
check_empty_vals <- players_clean %>%
select(key, where(~ !is.numeric(.))) %>%  # Select only non-numeric columns
#filter(if_any(where(~ !is.numeric(.)), ~ . == ""))
summarise(across(everything(), ~ sum(. == "", na.rm = TRUE), .names = "{col}")) %>%
pivot_longer(2:ncol(.), names_to = "column", values_to = "values")
# impute empty value_eur
players_clean$value_eur <- as.numeric(ifelse(players_clean$value_eur == "", NA, players_clean$value_eur))
# add age_range so that we can impute more easily
players_clean <- players_clean %>%
mutate(age_group = case_when(
age <= 18 ~ "18-",
age >= 18 & age <= 20 ~ "18-20",
age >= 21 & age <= 25 ~ "18-20",
age >= 25 & age <= 29 ~ "25-29",
age >= 30            ~ "30+",
TRUE                 ~ NA_character_  # Handle missing or invalid ages
),
overall_range = case_when(
overall <= 50 ~ "50-",
overall >= 51 & overall <= 55 ~ "51-55",
overall >= 56 & overall <= 60 ~ "56-60",
overall >= 61 & overall <= 65 ~ "61-65",
overall >= 66 & overall <= 70 ~ "66-70",
overall >= 71 & overall <= 75 ~ "71-75",
overall >= 76 & overall <= 80 ~ "76-80",
overall >= 81 & overall <= 85 ~ "81-85",
overall >= 86 & overall <= 90 ~ "86-90",
overall > 90 ~ "90+",
TRUE ~ NA_character_  # Handle missing or invalid overall values
)
)
# Impute missing values in value_eur
players_clean <- players_clean %>%
group_by(position_category, age_group, overall_range, league_level) %>%  # Group by relevant columns, including age_group
mutate(value_eur = ifelse(is.na(value_eur), mean(value_eur, na.rm = TRUE), value_eur)) %>%
ungroup() %>%# Remove grouping
mutate(value_eur = ifelse(is.na(value_eur), min(value_eur, na.rm = TRUE), value_eur)) #this only concerns one observation
#### teams df
na_summary_teams <- teams_clean %>%
summarise(across(everything(), ~ sum(is.na(.)), .names = "{col}")) %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "na_count") %>%
mutate(
na_fraction_perc = na_count / nrow(teams_clean) * 100
) %>%
filter(na_count > 0)
na_summary_teams
rem_na <- na_summary_teams$column[na_summary_teams$na_fraction_perc >= 30]
teams_clean <- teams_clean %>%
select(-all_of(rem_na), -league_id, -league_level) %>% # too many NAs - RL relevance of these stats are also to be doubted
left_join(league_names_edited, by = c("league_name"="league_name", "league_nationality_name" = "league_nationality_name")) %>%
select(colnames(.)[1:8], league_nationality_name, league_id, league_level, everything())
check_names_teams <- teams_clean %>%
select(where(~ !is.numeric(.))) %>%
filter(if_any(everything(), ~ . == "")) %>%
summarise(across(everything(), ~ sum(. == ""), .names = "{col}"),
summarise(across(everything(), ~ sum(is.na(.)), .names = "{col}")))  %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "miss_count") %>%
mutate(
miss_fraction_perc = miss_count / nrow(teams_clean) * 100
) %>%
filter(miss_count > 0)
check_names_teams
rem_miss <- check_names_teams$column[check_names_teams$miss_fraction_perc >= 30]
teams_clean <- teams_clean %>%
select(-all_of(rem_miss))
# presige is a bit weird for fifa versions 15 and 16 -> we will impute the prestige for these two years using the fifa 17
fix_prestige_1516 <- teams_clean %>%
select(team_id, team_name, league_name, fifa_version, domestic_prestige, international_prestige) %>%
distinct() %>%
filter(fifa_version <= 16)
fix_prestige <- teams_clean %>%
select(team_id, team_name, league_name, fifa_version, domestic_prestige, international_prestige) %>%
distinct() %>%
filter(fifa_version > 16) %>%
group_by(team_id, team_name) %>%
summarise(
domestic_prestige_fix = round(mean(domestic_prestige, na.rm = TRUE)),
international_prestige_fix = round(mean(international_prestige, na.rm = TRUE))
) %>%
ungroup()
mean(fix_prestige_1516$team_id %in% fix_prestige$team_id)
team_checkpoint <- teams_clean
#teams_clean <- team_checkpoint
teams_clean <- teams_clean %>%
left_join(
fix_prestige %>%
select(team_id, international_prestige_fix, domestic_prestige_fix),
by = "team_id"
) %>%
mutate(
international_prestige = case_when(
fifa_version <= 16 & !is.na(international_prestige_fix) ~ international_prestige_fix,  # Use fix value
fifa_version > 16 ~ international_prestige,
.default = NA,
),
domestic_prestige = case_when(
fifa_version <= 16 & !is.na(domestic_prestige_fix) ~ domestic_prestige_fix,  # Use fix value
fifa_version > 16 ~ domestic_prestige_fix,
.default = NA,
),
overall_range = case_when(
overall <= 50 ~ "50-",
overall >= 51 & overall <= 55 ~ "51-55",
overall >= 56 & overall <= 60 ~ "56-60",
overall >= 61 & overall <= 65 ~ "61-65",
overall >= 66 & overall <= 70 ~ "66-70",
overall >= 71 & overall <= 75 ~ "71-75",
overall >= 76 & overall <= 80 ~ "76-80",
overall >= 81 & overall <= 85 ~ "81-85",
overall >= 86 & overall <= 90 ~ "86-90",
overall > 90 ~ "90+",
TRUE ~ NA_character_  # Handle missing or invalid overall values
)
) %>%
select(-international_prestige_fix, -domestic_prestige_fix) %>%
group_by(overall_range, league_id) %>%
mutate(
international_prestige = ifelse(is.na(international_prestige), round(mean(international_prestige, na.rm = TRUE)), international_prestige),
domestic_prestige = ifelse(is.na(domestic_prestige), round(mean(domestic_prestige, na.rm = TRUE)), domestic_prestige)
) %>%
ungroup %>%
mutate(
international_prestige = ifelse(is.na(international_prestige), min(international_prestige, na.rm = TRUE), international_prestige),
domestic_prestige = ifelse(is.na(domestic_prestige), min(domestic_prestige, na.rm = TRUE), domestic_prestige)
) #this concerns only two observations
summary(teams_clean$domestic_prestige)
summary(teams_clean$international_prestige)
team_checkpoint <- teams_clean
#teams_clean <- team_checkpoint
# Impute transfer_budget_eur and club_worth_eur
# TODO beschreibe hier die Cascade runter
teams_clean <- teams_clean %>%
mutate(
international_prestige_range = case_when(
international_prestige < 3 ~ "2-",
international_prestige >= 3 & international_prestige <= 4 ~ "3-4",
international_prestige >= 5 & international_prestige <= 6 ~ "5-6",
international_prestige >= 7 & international_prestige <= 8 ~ "7-8",
international_prestige >= 9 & international_prestige <= 10 ~ "9-10",
TRUE ~ NA_character_  # Handle missing or invalid overall values
),
domestic_prestige_range = case_when(
domestic_prestige < 3 ~ "2-",
domestic_prestige >= 3 & domestic_prestige <= 4 ~ "3-4",
domestic_prestige >= 5 & domestic_prestige <= 6 ~ "5-6",
domestic_prestige >= 7 & domestic_prestige <= 8 ~ "7-8",
domestic_prestige >= 9 & domestic_prestige <= 10 ~ "9-10",
TRUE ~ NA_character_  # Handle missing or invalid overall values
)
) %>%
group_by(international_prestige_range, overall_range, league_level, domestic_prestige_range) %>%  # Group by relevant columns, including age_group
mutate(
transfer_budget_eur = ifelse(is.na(transfer_budget_eur), mean(transfer_budget_eur, na.rm = TRUE), transfer_budget_eur),
club_worth_eur = ifelse(is.na(club_worth_eur), mean(club_worth_eur, na.rm = TRUE), club_worth_eur)
) %>%
ungroup %>%
group_by(international_prestige_range, overall_range, league_level) %>%
mutate(
transfer_budget_eur = ifelse(is.na(transfer_budget_eur), mean(transfer_budget_eur, na.rm = TRUE), transfer_budget_eur),
club_worth_eur = ifelse(is.na(club_worth_eur), mean(club_worth_eur, na.rm = TRUE), club_worth_eur)
) %>%
ungroup() %>%
group_by(domestic_prestige_range, league_level) %>%
mutate(
transfer_budget_eur = ifelse(is.na(transfer_budget_eur), mean(transfer_budget_eur, na.rm = TRUE), transfer_budget_eur),
club_worth_eur = ifelse(is.na(club_worth_eur), mean(club_worth_eur, na.rm = TRUE), club_worth_eur)
) %>%
ungroup()
overview <- teams_clean %>%
filter(is.na(transfer_budget_eur) | is.na(club_worth_eur))
#++ Checkpoint
players_clean_checkpoint <- players_clean
#players_clean <- players_clean_checkpoint
##############################_
####### NA Handling ----
na_summary <- players_clean %>%
summarise(across(everything(), ~ sum(is.na(.)), .names = "{col}")) %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "na_count") %>%
mutate(
na_fraction_perc = na_count / nrow(players_clean) * 100
) %>%
filter(na_count > 0)
na_summary
# players on loan do not have a club_joined_date
na_check_club_joined <- players_clean %>%
select(key, long_name, club_name, club_joined_date, on_loan) %>%
filter(is.na(club_joined_date))
# simplified assumption, player joined on loan in the last summer transfer window -> we will make
# the date 01.08 + year of fifa version - 1 (fifa is released in sept of the year before the versions year)
players_clean$club_joined_date <- as.Date(ifelse(
is.na(players_clean$club_joined_date),
paste0("20", (players_clean$fifa_version) - 1, "-08-01"),
as.character(players_clean$club_joined_date)  # Convert to character for compatibility
))
# goalkeeping_speed na fÃ¼r alle nicht GKs -  eine Ausnahme, diese werden wir ausschlieÃen
# all missing values except for mentality_compuser are GK
players_clean <- players_clean %>%
mutate(
goalkeeping_speed = ifelse((position_category != "GK" & is.na(goalkeeping_speed)), 0, goalkeeping_speed),
pace = ifelse((position_category == "GK" & is.na(pace)), 0, pace),
shooting = ifelse((position_category == "GK" & is.na(shooting)), 0, shooting),
passing = ifelse((position_category == "GK" & is.na(passing)), 0, passing),
dribbling = ifelse((position_category == "GK" & is.na(dribbling)), 0, dribbling),
defending = ifelse((position_category == "GK" & is.na(defending)), 0, defending),
physic = ifelse((position_category == "GK" & is.na(physic)), 0, physic)
) %>%
filter(!(position_category == "GK" & is.na(goalkeeping_speed)))
na_summary <- players_clean %>%
summarise(across(everything(), ~ sum(is.na(.)), .names = "{col}")) %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "na_count") %>%
mutate(
na_fraction_perc = na_count / nrow(players_clean) * 100
) %>%
filter(na_count > 0)
na_summary
# Impute mentality_composure NAs the way we did for value_eur
players_clean <- players_clean %>%
group_by(position_category, age_group, overall_range) %>%  # Group by relevant columns, including age_group
mutate(
mentality_composure = ifelse(is.na(mentality_composure), mean(mentality_composure, na.rm = TRUE), mentality_composure)
) %>%
ungroup() %>% # Remove grouping
mutate(mentality_composure = ifelse(is.na(mentality_composure), min(mentality_composure, na.rm = TRUE), mentality_composure)) #this concerns only two observations
##############################_
####### League-Level Data ----
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
international_prestige = round(international_prestige) ,
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything())
# Calculate Prestige Score
test <- league_clean %>%
mutate(
# Normalize international_prestige
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
# Normalize transfer_budget_eur
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
# Normalize club_worth_eur
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # Calculate the weighted prestige score
round(0.2 * norm_international_prestige +
0.3 * norm_transfer_budget +
0.5 * norm_club_worth)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
check <- teams_clean %>%
group_by(league_id, league_name, league_nationality_name) %>%
summarise(n = length(team_id))
View(test)
# Calculate Prestige Score
test <- league_clean %>%
mutate(
# Normalize international_prestige
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
# Normalize transfer_budget_eur
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
# Normalize club_worth_eur
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # Calculate the weighted prestige score
round(0.15 * norm_international_prestige +
0.25 * norm_transfer_budget +
0.5 * norm_club_worth)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
round(0.15 * norm_international_prestige +
0.25 * norm_transfer_budget +
0.5 * norm_club_worth)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
View(league_clean)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.15 * norm_international_prestige +
0.25 * norm_transfer_budget +
0.5 * norm_club_worth,
international_prestige = round(1 + 9 * (prestige_score_raw - min(prestige_score_raw, na.rm = TRUE)) /
(max(prestige_score_raw, na.rm = TRUE) - min(prestige_score_raw, na.rm = TRUE)))
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.15 * norm_international_prestige +
0.25 * norm_transfer_budget +
0.5 * norm_club_worth,
international_prestige = round(1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)))
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.15 * norm_international_prestige +
0.25 * norm_transfer_budget +
0.5 * norm_club_worth,
international_prestige = round(international_prestige)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.3 * norm_international_prestige +
0.2 * norm_transfer_budget +
0.6 * norm_club_worth,
international_prestige = round(international_prestige)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.4 * norm_international_prestige +
0.2 * norm_transfer_budget +
0.6 * norm_club_worth,
international_prestige = round(international_prestige)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
league_clean <- teams_clean %>%
select(-rival_team, -domestic_prestige) %>%
group_by(fifa_version, league_id, league_name, league_nationality_name, league_level) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE), .names = "{col}")
) %>%
ungroup() %>%
mutate(
overall = round(overall),
attack = round(attack),
midfield = round(midfield),
defence = round(defence),
league_url = paste0("/league/", league_id, "/", league_name, "/", fifa_version, "002" ) # ACHTUNG this is imaginary
) %>%
select(league_id, fifa_version, league_url, league_name, everything()) %>%
mutate(
norm_international_prestige = 1 + 9 * (international_prestige - min(international_prestige, na.rm = TRUE)) /
(max(international_prestige, na.rm = TRUE) - min(international_prestige, na.rm = TRUE)),
norm_transfer_budget = 1 + 9 * (transfer_budget_eur - min(transfer_budget_eur, na.rm = TRUE)) /
(max(transfer_budget_eur, na.rm = TRUE) - min(transfer_budget_eur, na.rm = TRUE)),
norm_club_worth = 1 + 9 * (club_worth_eur - min(club_worth_eur, na.rm = TRUE)) /
(max(club_worth_eur, na.rm = TRUE) - min(club_worth_eur, na.rm = TRUE)),
international_prestige = # we calculate a weighted prestige score from the normed transfer budget, club worth and average international prestige
0.3 * norm_international_prestige +
0.3 * norm_transfer_budget +
0.6 * norm_club_worth,
international_prestige = round(international_prestige)
) %>%
select(-norm_international_prestige, -norm_transfer_budget, -norm_club_worth)
write.csv2(players_clean, file = "dataset/players_clean.csv")
write.csv2(teams_clean, file = "dataset/teams_clean.csv")
write.csv2(league_clean, file = "dataset/league_clean.csv")
